################################################################################
# UI
################################################################################
# ファイルツリー
[[plugins]]
repo = 'nvim-tree/nvim-tree.lua'
depends = ['nvim-web-devicons']
on_cmd = [
  'NvimTreeOpen',
  'NvimTreeClose',
  'NvimTreeToggle',
  'NvimTreeFocus',
  'NvimTreeRefresh',
  'NvimTreeFindFile',
  'NvimTreeFindFileToggle',
  'NvimTreeClipboard',
  'NvimTreeResize',
  'NvimTreeCollapse',
  'NvimTreeCollapseKeepBuffers',
  'NvimTreeGenerateOnAttach'
]
lua_add = '''
require("plugins.ui.nvim-tree").lua_add()
'''
lua_source = '''
require("plugins.ui.nvim-tree").lua_source()
'''

# nvim-treeのアイコン
[[plugins]]
repo = 'nvim-tree/nvim-web-devicons'
on_source = ['diffview', 'nvim-tree.lua']

# カーソル位置の階層を表示するやつ
[[plugins]]
# NOTE: Neovim Nightly (>= 0.10.0-dev)
repo = 'Bekaboo/dropbar.nvim'
on_event = ['FileType', 'BufRead']
lua_source = '''
require("plugins.ui.dropbar").lua_source()
'''
################################################################################
# coding
################################################################################
# matchitをもっと強くしたようなやつ(ハイライトとかもされる)
[[plugins]]
repo = 'andymass/vim-matchup'
on_event = ['BufRead']
lua_source = '''
require("plugins.coding.matchup").lua_source()
'''

# 行内ジャンプ用にハイライトしてくれるやつ
[[plugins]]
repo = 'unblevable/quick-scope'
on_event = ['CursorMoved']

# コメントアウト
[[plugins]]
repo = 'tpope/vim-commentary'
on_event = ['CursorMoved']
lua_source = '''
require("plugins.coding.commentary").lua_source()
'''

# 括弧、クォーテーション、htmlタグの自動close
[[plugins]]
repo = 'ukiuki-engineer/vim-autoclose'
rev = 'develop'
on_if='v:true'
on_event = ['InsertEnter']
hook_source = '''
call plugins#autoclose#hook_source()
'''

[[plugins]]
repo = 'windwp/nvim-autopairs'
on_if='v:false'
on_event = ['InsertEnter']
lua_source = '''
require("plugins.coding.nvim-autopairs").lua_source()
'''

# Markdownでtable作成
[[plugins]]
repo = 'mattn/vim-maketable'
on_cmd = ['MakeTable', 'UnmakeTable']

# 補完エンジン
[[plugins]]
repo = 'hrsh7th/nvim-cmp'
depends = ['cmp-cmdline', 'cmp-buffer', 'cmp-path', 'cmp-skkeleton']
on_event = ['CmdlineEnter', 'InsertEnter']
lua_source = '''
require("plugins.coding.nvim-cmp").lua_source()
'''

# コマンドライン補完用nvim-cmpのソース
[[plugins]]
repo = 'hrsh7th/cmp-cmdline'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'hrsh7th/cmp-buffer'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'hrsh7th/cmp-path'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'rinx/cmp-skkeleton'
on_source = 'nvim-cmp'

# shfmtをvimから実行するやつ
[[plugins]]
repo = 'z0mbix/vim-shfmt'
on_ft = ['bash', 'sh', 'zsh']
lua_source = '''
require("plugins.coding.shfmt").lua_source()
'''

# デフォルトより見やすいsyntax highlight
[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
depends = ['nvim-ts-context-commentstring']
on_event = ['FileType']
lua_source = '''
require("plugins.coding.treesitter").lua_source()
'''

[[plugins]]
repo = 'nvim-treesitter/playground'
depends = ['nvim-treesitter']
on_cmd = ['TSPlaygroundToggle']

[[plugins]]
repo = 'JoosepAlviste/nvim-ts-context-commentstring'
on_event = ['FileType']

# インデント可視化
[[plugins]]
repo = 'lukas-reineke/indent-blankline.nvim'
on_event = ['CursorMoved']
lua_source = '''
require("plugins.coding.indent-blankline").lua_source()
'''

# editorconfig
[[plugins]]
repo = 'editorconfig/editorconfig-vim'
on_event = ['BufRead']

# カラーコード可視化
[[plugins]]
repo = 'norcalli/nvim-colorizer.lua'
on_ft = [
  'blade',
  'css',
  'eruby',
  'html',
  'less',
  'lua',
  'sass',
  'scss',
  'stylus',
  'toml',
  'vim',
  'vue'
]
on_cmd = [
  'ColorizerAttachToBuffer',
  'ColorizerDetachFromBuffer',
  'ColorizerReloadAllBuffers'
]
lua_source = '''
require("plugins.coding.colorizer").lua_source()
'''

# ヤンク範囲をハイライトするやつ
[[plugins]]
repo = 'machakann/vim-highlightedyank'
on_event = ['BufRead', 'CursorMoved', 'InsertEnter']
lua_source = '''
require("plugins.coding.highlightedyank").lua_source()
'''

# AIがコード補完してくれるやつ
[[plugins]]
repo = 'Exafunction/codeium.vim'
on_event = ['FileType']
lua_add = '''
require("plugins.coding.codeium").lua_add()
'''

# 記号で囲むやつ
[[plugins]]
# NOTE: 括弧系は、左右で挙動が違う
# - `ysw(`
# -> ( hoge )
# - `ysw)`
# -> (hoge)
repo = 'tpope/vim-surround'
on_event = ['CursorMoved']

# surroundとかをドットリピートできるようにするやつ
[[plugins]]
repo = 'tpope/vim-repeat'
on_source = ['vim-surround']

[[plugins]]
repo = 'haya14busa/vim-edgemotion'
on_event = ['CursorMoved']
lua_source = '''
require("plugins.coding.edgemotion").lua_source()
'''

# スニペットのソース類
[[plugins]]
# NOTE: coc-snippetsで呼び出して使う
# 個々のcocプラグイン側の補完候補とぶつかって面倒な場合はどちらかをオフにする
repo = 'honza/vim-snippets'
on_event = ['FileType']
################################################################################
# Git
################################################################################
# 行番号の左に、gitの状態を表示するやつ
[[plugins]]
repo = 'lewis6991/gitsigns.nvim'
on_event = ['BufRead']
lua_source = '''
require("plugins.git.gitsigns").lua_source()
'''

# gitの差分をvimdiffで表示したりstageしたりするやつ
[[plugins]]
# NOTE: master <- 現在のブランチでプルリクを出す時
#   :DiffviewOpen master..HEAD   # masterと、現ブランチの最新のcommitの差分(cocのdiagnosticsが表示されない)
#   :DiffviewOpen master         # masterと、working treeの差分(cocのdiagnosticsが表示されるからこっちの方が良いかも)
repo = 'sindrets/diffview.nvim'
depends = ['plenary.nvim', 'nvim-web-devicons']
on_cmd = [
  'DiffviewClose',
  'DiffviewFileHistory',
  'DiffviewFocusFiles',
  'DiffviewLog',
  'DiffviewOpen',
  'DiffviewRefresh',
  'DiffviewToggleFiles'
]
lua_add = '''
require("plugins.git.diffview").lua_add()
'''
lua_source = '''
require("plugins.git.diffview").lua_source()
'''
################################################################################
# FZF
################################################################################
[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
depends = ['plenary.nvim', 'telescope-fzf-native.nvim']
on_cmd = [
  'BufferLines',
  'Buffers',
  'ColorSchemes',
  'CommandHistories',
  'Commands',
  'Commits',
  'Filetypes',
  'FindAllFiles',
  'FindFiles',
  'FindFilesAll',
  'GitBranches',
  'GitStashList',
  'GitStatus',
  'HelpTags',
  'Highlights',
  'LiveGrep',
  'ManPages',
  'Marks',
  'OldFiles',
  'Tags',
  'Telescope',
]
lua_add = '''
require("plugins.others.telescope").lua_add()
'''
lua_source = '''
require("plugins.others.telescope").lua_source()
'''

[[plugins]]
repo = 'nvim-telescope/telescope-fzf-native.nvim'
build = 'make'
on_source = ['telescope.nvim']

[[plugins]]
repo = 'nvim-telescope/telescope-media-files.nvim'
on_source = ['telescope.nvim']
################################################################################
# Others
################################################################################
# 多分nvim用のluaライブラリ的なやつ
[[plugins]]
repo = 'nvim-lua/plenary.nvim'
on_source = ['diffview', 'telescope.nvim']

# vimから編集中のファイルを素早く実行するやつ
[[plugins]]
repo = 'thinca/vim-quickrun'
on_cmd = ['QuickRun']
lua_add = '''
require("plugins.others.quickrun").lua_add()
'''

# ウィンドウリサイズを楽にするやつ
[[plugins]]
# NOTE: <C-e>でresizeモードに入る
repo = 'simeji/winresizer'
on_event = ['WinEnter']
hook_source = '''
call plugins#winresizer#hook_source()
'''

# ヘルプファイル自動生成
[[plugins]]
repo = 'LeafCage/vimhelpgenerator'
on_cmd = ['VimHelpGenerator', 'VimHelpGeneratorVirtual']
lua_source = '''
require("plugins.others.vimhelpgenerator").lua_source()
'''

# vimの起動速度を測定
[[plugins]]
repo = 'dstein64/vim-startuptime'
on_cmd = ['StartupTime']

# vim内でMarkdownをプレビューするやつ
[[plugins]]
# NOTE: [mdrコマンド](https://github.com/MichaelMure/mdr)をインストールする必要あり
repo = 'skanehira/preview-markdown.vim'
on_cmd = ['PreviewMarkdown']

# ブラウザ上でmarkdownをリアルタイムにプレビューするやつ
[[plugins]]
# NOTE: pip install docutils
#       rst2html.py --version
repo = 'previm/previm'
on_cmd = ['PrevimOpen']
lua_source = '''
require("plugins.others.previm").lua_source()
'''

# コマンドの実行結果をバッファに読み込んでくれるやつ
[[plugins]]
# NOTE: 以下の方法で代用も出来る
# インサートモードに入る → <C-r>=execute("コマンド")<CR>
repo = 'numEricL/vim-redirect'
on_cmd = ['Redirect']

# blade
[[plugins]]
repo = 'jwalton512/vim-blade'
on_if = 'expand("%") =~ "blade\.php"'
on_ft = ['blade']

# applescriptのsyntax highlight
[[plugins]]
repo = 'vim-scripts/applescript.vim'
on_ft = ['applescript']

# カラーパレット
[[plugins]]
repo = 'uga-rosa/ccc.nvim'
on_cmd = [
  'CccPick',
  'CccConvert',
  'CccHighlighterEnable',
  'CccHighlighterDisable',
  'CccHighlighterToggle',
]

# 普通のバッファ編集間隔でファイル操作できるやつ
[[plugins]]
repo = 'stevearc/oil.nvim'
on_cmd = ['Oil']
lua_add = '''
require("plugins.others.oil").lua_add()
'''
lua_source = '''
require("plugins.others.oil").lua_source()
'''
