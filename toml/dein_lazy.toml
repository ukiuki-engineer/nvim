[[plugins]] # nvim-treesitter
# NOTE: デフォルトのシンタックスハイライトは色が少なくて見づらい
# これを入れるだけであらゆるファイルタイプのシンタックスハイライトが見やすくなる
# 逆にデフォルトの方が見やすい場合はtreesitterを適宜オフに設定する
repo = 'nvim-treesitter/nvim-treesitter'
on_event = ['BufRead']
hook_source = '''
call MyPluginSettings#hook_source_treesitter()
'''

[[plugins]] # git
repo = 'tpope/vim-fugitive'
on_event = ['BufRead']

[[plugins]] # VSCodeのGitLens的なやつ
repo = 'APZelos/blamer.nvim'
on_cmd = ['BlamerHide', 'BlamerShow', 'BlamerToggle']
hook_add = '''
call MyPluginSettings#hook_add_blamer()
'''

[[plugins]] # editorconfig
repo = 'editorconfig/editorconfig-vim'
on_event = ['BufRead']

[[plugins]] # インデント可視化
repo = 'lukas-reineke/indent-blankline.nvim'
on_event = ['BufRead']
hook_source = '''
call MyPluginSettings#hook_source_indent_blankline()
'''

[[plugins]] # 行内ジャンプ用にハイライトしてくれるやつ
# TODO しばらく試してみていらなかったら消す
repo = 'unblevable/quick-scope'
on_event = ['BufRead']

[[plugins]] # コメントアウト
repo = 'tyru/caw.vim'
on_event = ['BufRead']
hook_source = '''
call MyPluginSettings#hook_source_caw()
'''

[[plugins]] # コメントアウト
# NOTE: caw.vimではerubyのコメントアウトが効かなかったので、erubyのみcommentaryで対応
# gccで一行コメントアウト、gcでビジュアルモード選択範囲をコメントアウト
repo = 'tpope/vim-commentary'
on_ft = 'eruby'
# on_if = 'expand("%") =~ "\.erb"'

[[plugins]] # 括弧、クォーテーション、タグを自動で閉じてくれるプラグイン(自作)
repo = 'ukiuki-engineer/vim-autoclose'
on_event = ['BufRead']

[[plugins]] # blade
repo = 'jwalton512/vim-blade'
on_if = 'expand("%") =~ "blade\.php"'
on_ft = ['blade']

[[plugins]] # カラーコード可視化
repo = 'norcalli/nvim-colorizer.lua'
on_ft = ['css', 'html', 'less', 'sass', 'scss', 'stylus', 'vim', 'blade', 'vue', 'eruby', 'toml']
hook_source = '''
call MyPluginSettings#hook_source_colorizer()
'''
lua_post_source = '''
require 'colorizer'.setup()
'''

[[plugins]] # ヘルプファイル自動生成
repo = 'LeafCage/vimhelpgenerator'
on_cmd = ['VimHelpGenerator', 'VimHelpGeneratorVirtual']
hook_source = '''
call MyPluginSettings#hook_source_colorizer()
'''

[[plugins]] # markdownでtable作成
repo = 'mattn/vim-maketable'
on_ft = 'markdown'

[[plugins]] # ファイラー
repo = 'scrooloose/nerdtree'
on_cmd = [
  'NERDTree',
  'NERDTree',
  'NERDTreeCWD',
  'NERDTreeClose',
  'NERDTreeFind',
  'NERDTreeFocus',
  'NERDTreeFromBookmark',
  'NERDTreeMirror',
  'NERDTreeRefreshRoot',
  'NERDTreeSetting',
  'NERDTreeShowHidden',
  'NERDTreeToggle',
  'NERDTreeToggleVCS',
  'NERDTreeVCS'
]
hook_add = '''
call MyPluginSettings#hook_add_nerdtree()
'''

[[plugins]] # ファジーファインダー
repo = 'junegunn/fzf'
on_event = ['BufRead']
build = './install'

[[plugins]] # ファジーファインダー
# NOTE: プレビューウィンドウをハイライトするには、batをインストールする
# →brew install bat
repo = 'junegunn/fzf.vim'
# NOTE: こっちでもいい→on_source = ['fzf']
on_cmd = [
  'Files',
  'GFiles',
  'GFiles?',
  'Buffers',
  'Colors',
  'Ag',
  'Rg',
  'Lines',
  'BLines',
  'Tags',
  'BTags',
  'Marks',
  'Windows',
  'Locate PATTERN',
  'History',
  'History:',
  'History/',
  'Snippets',
  'Commits',
  'BCommits',
  'Commands',
  'Maps',
  'Helptags',
  'Filetypes'
]
depends = 'junegunn/fzf'
hook_add = '''
call MyPluginSettings#hook_add_fzf()
'''

[[plugins]] # vimの起動速度を測定
repo = 'dstein64/vim-startuptime'
on_cmd = ['StartupTime']

[[plugins]] # スニペットのソース類
# NOTE: coc-snippetsで呼び出して使う
# 個々のcocプラグイン側の補完候補とぶつかって面倒な場合はどちらかをオフにする
repo = 'honza/vim-snippets'
on_event = ['BufRead']

[[plugins]] # coc.nvim
# FIXME: erubyでjavascriptのsnippetsを使いたい(もうruby触ることないけど...)
# NOTE: coc-bladeは、"b:xxx"と打つと補完候補が出る
# NOTE: :CocCommand xx.xxで各拡張機能のコマンドを色々呼び出せる
repo = 'neoclide/coc.nvim'
rev = 'release'
on_event = ['BufRead']
hook_add = '''
call MyPluginSettings#hook_add_coc()
'''
