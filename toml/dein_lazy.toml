[[plugins]] # nvim-treesitter
# NOTE: デフォルトのシンタックスハイライトは色が少なくて見づらい
# これを入れるだけであらゆるファイルタイプのシンタックスハイライトが見やすくなる
# 逆にデフォルトの方が見やすい場合はtreesitterを適宜オフに設定する
repo = 'nvim-treesitter/nvim-treesitter'
on_event = ['BufRead', 'InsertEnter', 'FileType']
hook_source = '''
call MyPluginSettings#hook_source_treesitter()
'''

[[plugins]] # vimでgitを実行するやつ
# NOTE: :Git xxでgitコマンドを実行できる
# TODO: on_cmdにして全コマンドを指定
repo = 'tpope/vim-fugitive'
on_event = ['BufRead']

[[plugins]] # VSCodeのGitLens的なやつ
repo = 'APZelos/blamer.nvim'
depends = ['tpope/vim-fugitive']
on_cmd = ['BlamerHide', 'BlamerShow', 'BlamerToggle']
hook_add = '''
call MyPluginSettings#hook_add_blamer()
'''

[[plugins]] # vimから編集中のファイルを素早く実行するやつ
# FIXME: 実行結果を右ではなく下に小さく表示させたい
repo = 'thinca/vim-quickrun'
on_cmd = ['QuickRun']
hook_add = '''
call MyPluginSettings#hook_add_quickrun()
'''

[[plugins]] # editorconfig
repo = 'editorconfig/editorconfig-vim'
on_event = ['BufRead']

[[plugins]] # インデント可視化
repo = 'lukas-reineke/indent-blankline.nvim'
on_event = ['BufRead', 'InsertEnter']
hook_source = '''
call MyPluginSettings#hook_source_indent_blankline()
'''

[[plugins]] # 対のカッコをハイライト
repo = 'itchyny/vim-parenmatch'
on_event = ['BufRead', 'InsertEnter']
hook_add = '''
" NOTE: 標準プラグインのmatchparenを無効化
let g:loaded_matchparen = 1
'''

[[plugins]] # 行内ジャンプ用にハイライトしてくれるやつ
repo = 'unblevable/quick-scope'
on_event = ['BufRead', 'InsertEnter']

[[plugins]] # マークを可視化してくれるやつ
repo = 'kshenoy/vim-signature'
on_event = ['BufRead', 'InsertEnter']

[[plugins]] # コメントアウト
repo = 'tpope/vim-commentary'
on_event = ['BufRead', 'InsertEnter']
hook_source = '''
call MyPluginSettings#hook_source_commentary()
'''

[[plugins]] # 括弧、クォーテーション、タグを自動で閉じてくれるプラグイン(自作)
repo = 'ukiuki-engineer/vim-autoclose'
rev = 'develop'
on_event = ['BufRead', 'InsertEnter']
hook_source = '''
call MyPluginSettings#hook_source_autoclose()
'''

[[plugins]] # blade
repo = 'jwalton512/vim-blade'
on_if = 'expand("%") =~ "blade\.php"'
on_ft = ['blade']

[[plugins]] # カラーコード可視化
repo = 'norcalli/nvim-colorizer.lua'
on_ft = ['css', 'html', 'less', 'sass', 'scss', 'stylus', 'vim', 'blade', 'vue', 'eruby', 'toml']
hook_source = '''
call MyPluginSettings#hook_source_colorizer()
'''
lua_post_source = '''
require 'colorizer'.setup()
'''

[[plugins]] # ヘルプファイル自動生成
repo = 'LeafCage/vimhelpgenerator'
on_cmd = ['VimHelpGenerator', 'VimHelpGeneratorVirtual']
hook_source = '''
call MyPluginSettings#hook_source_vimhelpgenerator()
'''

[[plugins]] # Markdownでtable作成
repo = 'mattn/vim-maketable'
on_cmd = ['MakeTable', 'UnmakeTable']

[[plugins]] # vim内でMarkdownをプレビューするやつ
# NOTE: [mdrコマンド](https://github.com/MichaelMure/mdr)をインストールする必要あり
repo = 'skanehira/preview-markdown.vim'
on_cmd = ['PreviewMarkdown']

[[plugins]] # 行番号の左に、gitの状態を表示するやつ
repo = 'airblade/vim-gitgutter'
on_event = ['BufRead']

[[plugins]] # コマンドの実行結果をバッファに読み込んでくれるやつ
repo = 'numEricL/vim-redirect'
on_cmd = ['Redirect']

[[plugins]] # アイコン類
repo = 'ryanoasis/vim-devicons'
on_source = ['nerdtree']

[[plugins]] # ファイラー
# そろそろ変えたい...
# ファイル操作がもっと楽なやつないかなー？
# yypでファイルコピーできたりするような
repo = 'scrooloose/nerdtree'
on_cmd = [
  'NERDTree',
  'NERDTree',
  'NERDTreeCWD',
  'NERDTreeClose',
  'NERDTreeFind',
  'NERDTreeFocus',
  'NERDTreeFromBookmark',
  'NERDTreeMirror',
  'NERDTreeRefreshRoot',
  'NERDTreeSetting',
  'NERDTreeShowHidden',
  'NERDTreeToggle',
  'NERDTreeToggleVCS',
  'NERDTreeVCS'
]
hook_add = '''
call MyPluginSettings#hook_add_nerdtree()
'''
hook_source = '''
call MyPluginSettings#hook_source_nerdtree()
'''

[[plugins]] # nerdtreeにgitの状態を表示するやつ
repo = 'Xuyuanp/nerdtree-git-plugin'
on_event = ['BufRead']
on_cmd = [
  'NERDTree',
  'NERDTree',
  'NERDTreeCWD',
  'NERDTreeClose',
  'NERDTreeFind',
  'NERDTreeFocus',
  'NERDTreeFromBookmark',
  'NERDTreeMirror',
  'NERDTreeRefreshRoot',
  'NERDTreeSetting',
  'NERDTreeShowHidden',
  'NERDTreeToggle',
  'NERDTreeToggleVCS',
  'NERDTreeVCS'
]

[[plugins]] # Terminalモードを使いやすくするやつ
# あんま使ってないから消すかも...
repo = 'akinsho/toggleterm.nvim'
on_cmd = [
  'ToggleTerm',
  'ToggleTermSendCurrentLine',
  'ToggleTermSendVisualLines',
  'ToggleTermSendVisualSelection',
  'ToggleTermSetName',
  'ToggleTermToggleAll',
  'TermExec',
  'Term',
  'TermHere'
]
on_event = ['TermOpen']
hook_add = '''
call MyPluginSettings#hook_add_toggleterm()
'''
hook_source = '''
call MyPluginSettings#hook_source_toggleterm()
'''

[[plugins]] # ファジーファインダー
repo = 'junegunn/fzf'
on_event = ['BufRead']
build = './install'

[[plugins]] # ファジーファインダー
# NOTE: プレビューウィンドウをハイライトするには、batをインストールする
# →brew install bat
repo = 'junegunn/fzf.vim'
# NOTE: こっちでもいい→on_source = ['fzf']
on_cmd = [
  'Files',
  'GFiles',
  'GFiles?',
  'Buffers',
  'Colors',
  'Ag',
  'Rg',
  'Lines',
  'BLines',
  'Tags',
  'BTags',
  'Marks',
  'Windows',
  'Locate PATTERN',
  'History',
  'History:',
  'History/',
  'Snippets',
  'Commits',
  'BCommits',
  'Commands',
  'Maps',
  'Helptags',
  'Filetypes'
]
depends = 'junegunn/fzf'
hook_add = '''
call MyPluginSettings#hook_add_fzf()
'''

[[plugins]] # vimの起動速度を測定
repo = 'dstein64/vim-startuptime'
on_cmd = ['StartupTime']

# [[plugins]] # vim内部で日本語入力するためのプラグイン
# # FIXME: 試しに入れてみたけど、使いこなすには色々設定がいりそう...
# #        時間取れるときにゆっくり設定を作りこむ
# repo = 'vim-skk/eskk.vim'
# on_event = ['BufRead', 'InsertEnter']
# hook_add = '''
# call MyPluginSettings#hook_add_eskk()
# '''

[[plugins]] # スニペットのソース類
# NOTE: coc-snippetsで呼び出して使う
# 個々のcocプラグイン側の補完候補とぶつかって面倒な場合はどちらかをオフにする
repo = 'honza/vim-snippets'
on_event = ['BufRead', 'InsertEnter', 'FileType']

[[plugins]] # coc.nvim
# FIXME: erubyでjavascriptのsnippetsを使いたい(もうruby触ることないけど...)
# FIXME: bladeでも、phpの関数のhoverが読みたい
# NOTE: coc-bladeは、"b:xxx"と打つと補完候補が出る
# NOTE: :CocCommand xx.xxで各拡張機能のコマンドを色々呼び出せる
# NOTE: :CocCommand cSpell.addWordToDictionaryでスペルチェックの例外追加
# NOTE: Laravel固有のメソッドに対して補完やホバーを行うには、補完ヘルパーファイルを出力する必要がある
# 手順は以下の通り
# composer require --dev barryvdh/laravel-ide-helper # ライブラリをインストール
# php artisan ide-helper:generate                    # _ide_helper.phpを生成
# php artisan ide-helper:models --nowrite            # _ide_helper_models.phpを生成
repo = 'neoclide/coc.nvim'
rev = 'release'
on_event = ['BufRead', 'InsertEnter', 'FileType']
hook_add = '''
call MyPluginSettings#hook_add_coc()
'''
hook_source = '''
call MyPluginSettings#hook_source_coc()
'''
