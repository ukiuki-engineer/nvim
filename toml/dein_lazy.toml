################################################################################
# UI
################################################################################
[[plugins]]
repo = 'nvim-tree/nvim-tree.lua'
depends = ['nvim-web-devicons']
on_cmd = [
  'NvimTreeOpen',
  'NvimTreeClose',
  'NvimTreeToggle',
  'NvimTreeFocus',
  'NvimTreeRefresh',
  'NvimTreeFindFile',
  'NvimTreeFindFileToggle',
  'NvimTreeClipboard',
  'NvimTreeResize',
  'NvimTreeCollapse',
  'NvimTreeCollapseKeepBuffers',
  'NvimTreeGenerateOnAttach'
]
lua_add = '''
require("plugins.ui").lua_add_nvim_tree()
'''
lua_source = '''
require("plugins.ui").lua_source_nvim_tree()
'''

[[plugins]] # nvim-treeのアイコン
repo = 'nvim-tree/nvim-web-devicons'
on_source = ['diffview', 'nvim-tree.lua']

[[plugins]] # カーソル位置の階層を表示するやつ
# NOTE: Neovim Nightly (>= 0.10.0-dev)
repo = 'Bekaboo/dropbar.nvim'
on_event = ['FileType', 'BufRead']
lua_source = '''
require("plugins.ui").lua_source_dropbar()
'''
################################################################################
# coding
################################################################################
[[plugins]] # matchitをもっと強くしたようなやつ(ハイライトとかもされる)
repo = 'andymass/vim-matchup'
on_event = ['CursorMoved']
lua_source = '''
require("plugins.coding").lua_source_matchup()
'''

[[plugins]] # 行内ジャンプ用にハイライトしてくれるやつ
repo = 'unblevable/quick-scope'
on_event = ['CursorMoved']

[[plugins]] # コメントアウト
repo = 'tpope/vim-commentary'
on_event = ['CursorMoved']
lua_source = '''
require("plugins.coding").lua_source_commentary()
'''

[[plugins]] # 括弧、クォーテーション、タグを自動で閉じてくれるプラグイン(自作)
repo = 'ukiuki-engineer/vim-autoclose'
rev = 'develop'
on_event = ['InsertEnter']
lua_source = '''
require("plugins.coding").lua_source_autoclose()
'''

[[plugins]] # カラーコード可視化
repo = 'norcalli/nvim-colorizer.lua'
on_ft = [
  'blade',
  'css',
  'eruby',
  'html',
  'less',
  'lua',
  'sass',
  'scss',
  'stylus',
  'toml',
  'vim',
  'vue'
]
lua_source = '''
require("plugins.coding").lua_source_colorizer()
'''

[[plugins]] # Markdownでtable作成
repo = 'mattn/vim-maketable'
on_cmd = ['MakeTable', 'UnmakeTable']

[[plugins]] # 補完エンジン
repo = 'hrsh7th/nvim-cmp'
depends = ['cmp-cmdline', 'cmp-buffer', 'cmp-path', 'cmp-skkeleton']
on_event = ['CmdlineEnter', 'InsertEnter']
lua_source = '''
require("plugins.coding").lua_source_nvim_cmp()
'''

[[plugins]] # コマンドライン補完用nvim-cmpのソース
repo = 'hrsh7th/cmp-cmdline'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'hrsh7th/cmp-buffer'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'hrsh7th/cmp-path'
on_source = 'nvim-cmp'

[[plugins]]
repo = 'rinx/cmp-skkeleton'
on_source = 'nvim-cmp'

[[plugins]] # shfmtをvimから実行するやつ
repo = 'z0mbix/vim-shfmt'
on_ft = ['bash', 'sh', 'zsh']
lua_source = '''
require("plugins.coding").lua_source_shfmt()
'''

################################################################################
# LSP
################################################################################
[[plugins]] # coc.nvim
repo = 'neoclide/coc.nvim'
# rev = 'release'
rev = 'master'
build = 'yarn install --frozen-lockfile' # NOTE: masterの場合のみ
depends = ['vim-snippets', 'fzf']
on_event = ['CursorMoved', 'FileType']
on_cmd = ['CocCommand']
lua_add = '''
require("plugins.coc").lua_add_coc()
'''
lua_source = '''
require("plugins.coc").lua_source_coc()
'''

[[plugins]] # スニペットのソース類
# NOTE: coc-snippetsで呼び出して使う
# 個々のcocプラグイン側の補完候補とぶつかって面倒な場合はどちらかをオフにする
repo = 'honza/vim-snippets'
on_event = ['FileType']
################################################################################
# Git
################################################################################
[[plugins]] # vimでgitを実行するやつ
# NOTE: :Git xxでgitコマンドを実行できる
repo = 'tpope/vim-fugitive'
on_cmd = [
  'G',
  'GBrowse',
  'GDelete',
  'GMove',
  'GRemove',
  'GRename',
  'GUnlink',
  'Gcd',
  'Gcommit'
  'Gdiffsplit!',
  'Gdiffsplit',
  'Gdrop',
  'Gedit',
  'Ghdiffsplit',
  'Git!',
  'Git',
  'Glcd',
  'Gllog',
  'Gpedit',
  'Gread',
  'Gsplit',
  'Gtabedit',
  'Gvdiffsplit',
  'Gvsplit',
  'Gwq!',
  'Gwq',
  'Gwrite',
]
lua_add = '''
require("plugins.git").lua_add_fugitive()
'''

[[plugins]] # VSCodeのGitLens的なやつ
repo = 'APZelos/blamer.nvim'
depends = ['vim-fugitive']
on_cmd = ['BlamerHide', 'BlamerShow', 'BlamerToggle']
lua_add = '''
require("plugins.git").lua_add_blamer()
'''

[[plugins]] # 行番号の左に、gitの状態を表示するやつ
repo = 'lewis6991/gitsigns.nvim'
on_event = ['BufRead']
lua_source = '''
require("plugins.git").lua_source_gitsigns()
'''

[[plugins]] # gitの差分をvimdiffで表示したりstageしたりするやつ
# NOTE: stageまではできるので、後は`:Git`でcommit & pushすれば良い
repo = 'sindrets/diffview.nvim'
depends = ['plenary.nvim', 'nvim-web-devicons']
on_cmd = [
  'DiffviewClose',
  'DiffviewFileHistory',
  'DiffviewFocusFiles',
  'DiffviewLog',
  'DiffviewOpen',
  'DiffviewRefresh',
  'DiffviewToggleFiles'
]
lua_add = '''
require("plugins.git").lua_add_diffview()
'''
lua_source = '''
require("plugins.git").lua_source_diffview()
'''

[[plugins]]
repo = 'nvim-lua/plenary.nvim'
on_source = ['diffview', 'telescope.nvim']
################################################################################
# Others
################################################################################
[[plugins]] # デフォルトより見やすいsyntax highlight
repo = 'nvim-treesitter/nvim-treesitter'
depends = ['nvim-ts-context-commentstring']
on_event = ['FileType']
lua_source = '''
require("plugins.others").lua_source_treesitter()
'''

[[plugins]]
repo = 'nvim-treesitter/playground'
depends = ['nvim-treesitter']
on_cmd = ['TSPlaygroundToggle']

[[plugins]]
repo = 'JoosepAlviste/nvim-ts-context-commentstring'
on_event = ['FileType']

[[plugins]] # インデント可視化
repo = 'lukas-reineke/indent-blankline.nvim'
on_event = ['CursorMoved']
lua_source = '''
require("plugins.others").lua_source_indent_blankline()
'''

[[plugins]] # vimから編集中のファイルを素早く実行するやつ
repo = 'thinca/vim-quickrun'
on_cmd = ['QuickRun']
lua_add = '''
require("plugins.others").lua_add_quickrun()
'''

[[plugins]] # editorconfig
repo = 'editorconfig/editorconfig-vim'
on_event = ['BufRead']


[[plugins]] # ウィンドウリサイズを楽にするやつ
# NOTE: <C-e>でresizeモードに入る
repo = 'simeji/winresizer'
on_event = ['WinEnter']
hook_source = '''
" ctrl系は小指にダメージがいくので...
let g:winresizer_start_key = '<space>w'
'''

[[plugins]] # Terminalモードを使いやすくするやつ
# あんま使ってないから消すかも...
repo = 'akinsho/toggleterm.nvim'
on_cmd = [
  'ToggleTerm',
  'ToggleTermSendCurrentLine',
  'ToggleTermSendVisualLines',
  'ToggleTermSendVisualSelection',
  'ToggleTermSetName',
  'ToggleTermToggleAll',
  'TermExec',
]
on_event = ['TermOpen']
lua_add = '''
require("plugins.others").lua_add_toggleterm()
'''
lua_source = '''
require("plugins.others").lua_source_toggleterm()
'''

[[plugins]] # ヘルプファイル自動生成
repo = 'LeafCage/vimhelpgenerator'
on_cmd = ['VimHelpGenerator', 'VimHelpGeneratorVirtual']
lua_source = '''
require("plugins.others").lua_source_vimhelpgenerator()
'''

[[plugins]] # vimの起動速度を測定
repo = 'dstein64/vim-startuptime'
on_cmd = ['StartupTime']

[[plugins]] # vim内でMarkdownをプレビューするやつ
# NOTE: [mdrコマンド](https://github.com/MichaelMure/mdr)をインストールする必要あり
repo = 'skanehira/preview-markdown.vim'
on_cmd = ['PreviewMarkdown']

[[plugins]] # ブラウザ上でmarkdownをリアルタイムにプレビューするやつ
# NOTE: pip install docutils
#       rst2html.py --version
repo = 'previm/previm'
on_cmd = ['PrevimOpen']
lua_source = '''
require("plugins.others").lua_source_previm()
'''

[[plugins]] # コマンドの実行結果をバッファに読み込んでくれるやつ
# NOTE: 以下の方法で代用も出来る
# インサートモードに入る → <C-r>=execute("コマンド")<CR>
repo = 'numEricL/vim-redirect'
on_cmd = ['Redirect']

[[plugins]] # blade
repo = 'jwalton512/vim-blade'
on_if = 'expand("%") =~ "blade\.php"'
on_ft = ['blade']

[[plugins]] # applescriptのsyntax highlight
repo = 'vim-scripts/applescript.vim'
on_ft = ['applescript']

[[plugins]] # ファジーファインダー
repo = 'junegunn/fzf'
build = './install'
on_source = ['coc.nvim']

[[plugins]]
repo = 'nvim-telescope/telescope.nvim'
depends = ['plenary', 'telescope-fzf-native.nvim']
on_cmd = [
  'BufferLines',
  'Buffers',
  'CommandHistories',
  'Commands',
  'Commits',
  'FindAllFiles',
  'FindFiles',
  'GitBranches',
  'GitStatus',
  'HelpTags',
  'LiveGrep',
  'OldFiles',
  'Telescope',
]
lua_add = '''
require("plugins.telescope").lua_add_telescope()
'''
lua_source = '''
require("plugins.telescope").lua_source_telescope()
'''

[[plugins]]
repo = 'nvim-telescope/telescope-fzf-native.nvim'
build = 'make'
on_source = ['telescope.nvim']
